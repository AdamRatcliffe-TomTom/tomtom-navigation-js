<?xml version="1.0" encoding="utf-8"?>
<manifest>
	<control namespace="tomtom" constructor="TomTomNavigation" version="0.4.4" display-name-key="TomTomNavigation" description-key="TomTomNavigation description" control-type="virtual">
		<!--
		external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
		If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be false by default.
		Example1:
		<external-service-usage enabled="true">
		<domain>www.Microsoft.com</domain>
		</external-service-usage>
		Example2:
		<external-service-usage enabled="false">
		</external-service-usage>
		-->
		<external-service-usage enabled="false">
			<!--
			UNCOMMENT TO ADD EXTERNAL DOMAINS
			<domain></domain>
			<domain></domain>
			-->
		</external-service-usage>
		<!-- property node identifies a specific, configurable piece of data that the control expects from CDS -->
		<property name="apiKey" display-name-key="API key" description-key="apiKey_Desc_Key" of-type="SingleLine.Text" usage="bound" required="true" />
		<property name="theme" display-name-key="Theme" description-key="theme_Desc_Key" of-type="Enum" usage="input" required="true" default-value="light">
			<value name="lightTheme" display-name-key="Light theme">light</value>
			<value name="darkTheme" display-name-key="Dark theme">dark</value>
		</property>
		<property name="showTrafficFlow" display-name-key="Show traffic flow" description-key="showTrafficFlow_Desc_Key" of-type="TwoOptions" usage="bound" required="false" default-value="false" />
		<property name="showTrafficIncidents" display-name-key="Show traffic incidents" description-key="showTrafficIncidents_Desc_Key" of-type="TwoOptions" usage="bound" required="false" default-value="false"/>
		<property name="showPoi" display-name-key="Show POI" description-key="showPoi_Desc_Key" of-type="TwoOptions" usage="bound" required="false" default-value="false"/>
		<property name="initialCenter" display-name-key="Initial map center (latitude,longitude)" description-key="initialCenter_Desc_Key" of-type="SingleLine.Text" usage="bound" required="false" />
		<property name="initialZoom" display-name-key="Initial zoom level" description-key="initialZoom_Desc_Key" of-type="Decimal" usage="bound" required="true" default-value="12" />
		<property name="showLocationMarker" display-name-key="Show location marker" description-key="showLocationMarker_Desc_Key" of-type="TwoOptions" usage="bound" required="false" default-value="true"/>
		<property name="showZoomControl" display-name-key="Show zoom control" description-key="showZoomControl_Desc_Key" of-type="TwoOptions" usage="bound" required="false" default-value="false"/>
		<property name="showMapSwitcherControl" display-name-key="Show map switcher control" description-key="showMapSwitcherControl_Desc_Key" of-type="TwoOptions" usage="bound" required="false" default-value="false"/>
		<property name="showNavigationPanel" display-name-key="Show navigation panel" description-key="showNavigationPanel_Desc_Key" of-type="TwoOptions" usage="bound" required="false" default-value="true"/>
		<property name="automaticRouteCalculation" display-name-key="Automatic route calculation" description-key="automaticRouteCalculation_Desc_Key" of-type="TwoOptions" usage="bound" required="false" default-value="false" />
		<property name="routeWaypoints" display-name-key="Route waypoints" description-key="routeWaypoints_Desc_Key" of-type="SingleLine.Text" usage="bound" required="false" />
		<property name="travelMode" display-name-key="Travel mode" description-key="travelMode_Desc_Key" of-type="Enum" usage="input" required="true" default-value="car">
			<value name="car" display-name-key="Car">car</value>
			<value name="truck" display-name-key="Truck">truck</value>
			<value name="taxi" display-name-key="Taxi">taxi</value>
			<value name="bus" display-name-key="Bus">bus</value>
			<value name="van" display-name-key="Van">van</value>
			<value name="motorcycle" display-name-key="Motorcycle">motorcycle</value>
			<value name="bicycle" display-name-key="Bicycle">bicycle</value>
			<value name="pedestrian" display-name-key="Pedestrian">pedestrian</value>
		</property>
		<property name="traffic" display-name-key="Calculate route with traffic" description-key="traffic_Desc_Key" of-type="TwoOptions" usage="bound" required="false" default-value="true"/>
		<property name="arrivalSidePreference" display-name-key="Arrival side preference" description-key="arrivalSidePreference_Desc_Key" of-type="Enum" usage="input" required="true" default-value="anySide">
			<value name="anySide" display-name-key="Any side">anySide</value>
			<value name="curbSide" display-name-key="Curb side">curbSide</value>			
		</property>
		<property name="simulationSpeed" display-name-key="Simulation speed" description-key="simulationSpeed_Desc_Key" of-type="Enum" usage="input" required="true" default-value="3x">
			<value name="1x" display-name-key="1x">1x</value>
			<value name="2x" display-name-key="2x">2x</value>
			<value name="3x" display-name-key="3x">3x</value>
			<value name="4x" display-name-key="4x">4x</value>
			<value name="5x" display-name-key="5x">5x</value>
		</property>
		<resources>
			<code path="index.ts" order="1" />
			<platform-library name="React" version="16.8.6" />
			<platform-library name="Fluent" version="8.29.0" />
			<css path="css/TomTomNavigation.css" order="1" />
			</resources>
		<!--
		UNCOMMENT TO ENABLE THE SPECIFIED API
		<feature-usage>
		<uses-feature name="Device.captureAudio" required="true" />
		<uses-feature name="Device.captureImage" required="true" />
		<uses-feature name="Device.captureVideo" required="true" />
		<uses-feature name="Device.getBarcodeValue" required="true" />
		<uses-feature name="Device.getCurrentPosition" required="true" />
		<uses-feature name="Device.pickFile" required="true" />
		<uses-feature name="Utility" required="true" />
		<uses-feature name="WebAPI" required="true" />
		</feature-usage>
		-->
	</control>
</manifest>
